#!/usr/bin/env python3
"""
Script para popular a base de conhecimento vetorial.
Permite importar documentos de legisla√ß√£o, pol√≠ticas e jurisprud√™ncia.
"""
import os
import sys
from pathlib import Path

# Adiciona o diret√≥rio raiz ao path
ROOT_DIR = Path(__file__).parent.parent
sys.path.insert(0, str(ROOT_DIR))

from utils.rag_client import RAGClient


# Exemplos de documentos para base de conhecimento
DOCUMENTOS_EXEMPLO = [
    {
        'titulo': 'Lei 105/2001 - Sigilo Banc√°rio - Art. 5¬∫',
        'conteudo': """Art. 5¬∫ O Poder Judici√°rio, o Minist√©rio P√∫blico e as Comiss√µes Parlamentares de Inqu√©rito poder√£o requisitar informa√ß√µes e documentos, inclusive aqueles protegidos por sigilo banc√°rio.

¬ß 1¬∫ As requisi√ß√µes de que trata este artigo dever√£o conter os seguintes elementos:
I - o n√∫mero do processo;
II - a autoridade judici√°ria;
III - a especifica√ß√£o das informa√ß√µes ou documentos solicitados;
IV - a especifica√ß√£o do per√≠odo abrangido pelas informa√ß√µes ou documentos requisitados.""",
        'tipo': 'legislacao',
        'metadata': {'lei': '105/2001', 'artigo': '5'}
    },
    {
        'titulo': 'C√≥digo de Processo Civil - Art. 219 - Prazos',
        'conteudo': """Art. 219. Na contagem de prazo em dias, estabelecido por lei ou pelo juiz, computar-se-√£o somente os dias √∫teis.

Par√°grafo √∫nico. O prazo estabelecido por lei ou pelo juiz √© cont√≠nuo, n√£o se interrompendo nos feriados.""",
        'tipo': 'legislacao',
        'metadata': {'lei': 'CPC', 'artigo': '219'}
    },
    {
        'titulo': 'LGPD - Art. 7¬∫ - Bases Legais',
        'conteudo': """Art. 7¬∫ O tratamento de dados pessoais somente poder√° ser realizado nas seguintes hip√≥teses:

VI - para a tutela da sa√∫de, exclusivamente, em procedimento realizado por profissionais de sa√∫de, servi√ßos de sa√∫de ou autoridade sanit√°ria;

VII - quando necess√°rio para atender aos interesses leg√≠timos do controlador ou de terceiro, exceto no caso de prevalecerem direitos e liberdades fundamentais do titular que exijam a prote√ß√£o dos dados pessoais;

VIII - para a prote√ß√£o do cr√©dito, inclusive quanto ao disposto na legisla√ß√£o pertinente.""",
        'tipo': 'legislacao',
        'metadata': {'lei': 'LGPD', 'artigo': '7'}
    },
    {
        'titulo': 'Pol√≠tica Interna - Atendimento a Of√≠cios Judiciais',
        'conteudo': """POL√çTICA DE ATENDIMENTO A OF√çCIOS JUDICIAIS

1. RECEBIMENTO
Todos os of√≠cios judiciais devem ser registrados no sistema no prazo m√°ximo de 24 horas ap√≥s o recebimento.

2. AN√ÅLISE DE COMPLIANCE
O setor de compliance deve analisar:
- Legitimidade da autoridade solicitante
- Adequa√ß√£o do pedido √† legisla√ß√£o vigente
- Completude das informa√ß√µes para atendimento

3. PRAZO DE RESPOSTA
- Of√≠cios com prazo < 5 dias: Prioridade ALTA
- Of√≠cios com prazo 5-15 dias: Prioridade M√âDIA
- Of√≠cios com prazo > 15 dias: Prioridade BAIXA

4. FUNDAMENTA√á√ÉO
Toda resposta deve citar:
- Base legal aplic√°vel (Lei 105/2001, LGPD, etc)
- N√∫mero do processo
- Protocolo interno de atendimento""",
        'tipo': 'politica_interna',
        'metadata': {'departamento': 'compliance', 'versao': '2.0'}
    },
    {
        'titulo': 'Template de Resposta - Bloqueio Judicial',
        'conteudo': """MINUTA DE RESPOSTA - BLOQUEIO JUDICIAL DE VALORES

Excelent√≠ssimo(a) Senhor(a) Dr(a). [AUTORIDADE],
[CARGO] da [VARA/TRIBUNAL]

Ref.: Processo n¬∫ [N√öMERO DO PROCESSO]

Em aten√ß√£o ao Of√≠cio n¬∫ [N√öMERO], recebido em [DATA], vimos respeitosamente informar:

1. CUMPRIMENTO DA ORDEM
Conforme determinado por Vossa Excel√™ncia, procedemos ao bloqueio dos valores dispon√≠veis na(s) conta(s) de titularidade de [NOME DO EXECUTADO], CPF/CNPJ n¬∫ [N√öMERO].

2. VALORES BLOQUEADOS
[Descri√ß√£o dos valores bloqueados]

3. FUNDAMENTA√á√ÉO LEGAL
O presente atendimento est√° fundamentado no Art. 5¬∫ da Lei n¬∫ 105/2001 e no cumprimento da ordem judicial expedida nos autos do processo em refer√™ncia.

4. PRAZO
Informamos que o presente of√≠cio foi atendido dentro do prazo legal estabelecido.

Permanecemos √† disposi√ß√£o para eventuais esclarecimentos.

Atenciosamente,
[NOME DO RESPONS√ÅVEL]
[CARGO] - Departamento Jur√≠dico""",
        'tipo': 'template',
        'metadata': {'categoria': 'bloqueio_judicial'}
    },
    {
        'titulo': 'Jurisprud√™ncia STJ - Sigilo Banc√°rio',
        'conteudo': """SUPERIOR TRIBUNAL DE JUSTI√áA
REsp 1234567/SP

EMENTA: SIGILO BANC√ÅRIO. QUEBRA. ORDEM JUDICIAL. NECESSIDADE DE FUNDAMENTA√á√ÉO.

A quebra do sigilo banc√°rio, ainda que por determina√ß√£o judicial, deve ser devidamente fundamentada, indicando-se a necessidade da medida e sua adequa√ß√£o ao caso concreto. A mera alega√ß√£o gen√©rica de necessidade de investiga√ß√£o n√£o autoriza o deferimento da medida.

Precedentes: REsp 123456/RJ, REsp 789012/MG

Relator: Min. [NOME]
Data de Julgamento: [DATA]""",
        'tipo': 'jurisprudencia',
        'metadata': {'tribunal': 'STJ', 'ano': '2023'}
    }
]


def main():
    """Popula a base de conhecimento com documentos de exemplo"""
    print("=" * 60)
    print("POPULA√á√ÉO DA BASE DE CONHECIMENTO VETORIAL")
    print("=" * 60)
    
    # Solicita org_id
    org_id = input("\nInforme o org_id da organiza√ß√£o: ").strip()
    
    if not org_id:
        print("‚ùå org_id √© obrigat√≥rio")
        sys.exit(1)
    
    print(f"\nüìä Organiza√ß√£o: {org_id}")
    print(f"üìö Documentos a importar: {len(DOCUMENTOS_EXEMPLO)}")
    
    # Confirma√ß√£o
    confirm = input("\nDeseja continuar? (s/n): ").strip().lower()
    if confirm != 's':
        print("Opera√ß√£o cancelada")
        sys.exit(0)
    
    # Inicializa RAG client
    print("\nüîß Inicializando RAG Client...")
    rag_client = RAGClient()
    
    # Importa documentos
    print("\nüì• Importando documentos...")
    doc_ids = []
    
    for idx, doc in enumerate(DOCUMENTOS_EXEMPLO, 1):
        print(f"\n[{idx}/{len(DOCUMENTOS_EXEMPLO)}] Processando: {doc['titulo']}")
        print(f"   Tipo: {doc['tipo']}")
        print(f"   Tamanho: {len(doc['conteudo'])} caracteres")
        
        try:
            # Gera embedding e salva
            doc_id = rag_client.add_document(
                org_id=org_id,
                titulo=doc['titulo'],
                conteudo=doc['conteudo'],
                tipo=doc['tipo'],
                metadata=doc.get('metadata')
            )
            
            doc_ids.append(doc_id)
            print(f"   ‚úÖ Documento salvo: {doc_id}")
            
        except Exception as e:
            print(f"   ‚ùå Erro ao processar documento: {e}")
    
    # Resumo
    print("\n" + "=" * 60)
    print("üìä RESUMO DA IMPORTA√á√ÉO")
    print("=" * 60)
    print(f"Total de documentos importados: {len(doc_ids)}")
    print(f"Organiza√ß√£o: {org_id}")
    print("\nIDs dos documentos:")
    for doc_id in doc_ids:
        print(f"  - {doc_id}")
    
    # Teste de busca
    print("\n" + "=" * 60)
    print("üîç TESTE DE BUSCA")
    print("=" * 60)
    
    query = input("\nInforme uma query de teste (ou Enter para pular): ").strip()
    
    if query:
        print(f"\nBuscando por: '{query}'")
        results = rag_client.search_and_retrieve(
            query_text=query,
            org_id=org_id,
            top_k=3
        )
        
        print(f"\nüìö Encontrados {results['num_results']} resultados relevantes:")
        
        for idx, result in enumerate(results['results'], 1):
            similarity_pct = result['similarity'] * 100
            print(f"\n{idx}. {result['titulo']}")
            print(f"   Relev√¢ncia: {similarity_pct:.1f}%")
            print(f"   Tipo: {result['tipo']}")
            print(f"   Preview: {result['conteudo'][:150]}...")
    
    print("\n‚úÖ Processo conclu√≠do!")


if __name__ == "__main__":
    main()





